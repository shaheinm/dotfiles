export CLICOLOR=1
export TERM=xterm-256color
export FULLDIR="true"
# -- Dotfiles Directory --------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"
export DOTFILES="$HOME/.dotfiles"

# Helper scripts
source "$DOTFILES/scripts/helpers/functions.sh"

# -- Local Configuration (Before Default) --------------------------------------
if [[ -f "$DOTFILES/zsh/zshrc.local.pre" ]]; then
  source $DOTFILES/zsh/zshrc.local.pre
fi

# -- Zsh -----------------------------------------------------------------------
ZSH="$HOME/.oh-my-zsh"
ZSH_CUSTOM="$DOTFILES/zsh/custom"
fpath=( "$DOTFILES/zsh/custom" $fpath)

# -- Theme ---------------------------------------------------------------------
ZSH_THEME=""

# -- ZSH Plugins ---------------------------------------------------------------
plugins=(
  git
  zsh-syntax-highlighting
  zsh-nvm
)

fpath=($DOTFILES/zsh/custom/completion $fpath)

# -- Oh My Zsh -----------------------------------------------------------------
source $ZSH/oh-my-zsh.sh

# -- Load Pure Prompt ----------------------------------------------------------
export PURE_PROMPT_SYMBOL='$'
export PURE_PROMPT_PRE='%F{73}'
autoload -U promptinit; promptinit
prompt pure
source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"

# -- Named Directories ---------------------------------------------------------
unsetopt auto_name_dirs

# -- Completion Config ---------------------------------------------------------
zstyle ':completion:*:*:vim:*:*files' ignored-patterns '*.class'

# -- Command History -----------------------------------------------------------
export HISTSIZE=500
export SAVEHIST=500

# -- Options -------------------------------------------------------------------
unsetopt correct_all
unsetopt correct

# -- Kube-PS1 ------------------------------------------------------------------
export KUBE_PS1_PREFIX='{{'
export KUBE_PS1_SUFFIX='}}'
export KUBE_PS1_DIVIDER='.'
export KUBE_PS1_SYMBOL_ENABLE="false"
export KUBE_PS1_CTX_COLOR='144'
export KUBE_PS1_NS_COLOR='65'

# -- Variables -----------------------------------------------------------------
alias vim=nvim
alias vi=nvim
alias ls="ls -FAl"
alias dm=docker-machine
alias dc=docker-compose
alias docker-cleanup='docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm'
alias work="cd ~/dev"
alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'
alias tmi='export FULLDIR="false"'
alias fulldir='export FULLDIR="true"'

# -- Aliases -------------------------------------------------------------------
if [[ -f "$DOTFILES/aliases" ]]; then
  source $DOTFILES/aliases
fi

if [[ -f "$HOME/.aliases" ]]; then
    source $HOME/.aliases
fi

# -- Functions -----------------------------------------------------------------

# Extract archive based on file type
# Taken from http://justinlilly.com/dotfiles/zsh.html
extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)        tar xjf $1        ;;
            *.tar.gz)         tar xzf $1        ;;
            *.bz2)            bunzip2 $1        ;;
            *.rar)            unrar x $1        ;;
            *.gz)             gunzip $1         ;;
            *.tar)            tar xf $1         ;;
            *.tbz2)           tar xjf $1        ;;
            *.tgz)            tar xzf $1        ;;
            *.zip)            unzip $1          ;;
            *.Z)              uncompress $1     ;;
            *)                echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# -- Git -----------------------------------------------------------------------
zstyle ':completion:*:*:hub:*' user-commands ${${(M)${(k)commands}:#git-*}/git-/}
_git-delete-tag() { compadd "$@" $(git tag) }

# -- TheFuck -------------------------------------------------------------------
#    https://github.com/nvbn/thefuck
alias fuck='$(thefuck $(fc -ln -1))'

# -- Add DOTFILES bin to PATH --------------------------------------------------
export PATH="$PATH:$DOTFILES/bin"

# -- fzf -----------------------------------------------------------------------
if [ -f ~/.fzf.zsh ]; then
  source ~/.fzf.zsh
  export FZF_TMUX=1
  export FZF_DEFAULT_OPTS='--color 16,info:6,hl:13,hl+:13'
  export FZF_DEFAULT_COMMAND="rg --files-with-matches --no-messages -F ''"
  export FZF_CTRL_T_COMMAND="rg --files-with-matches --no-messages --hidden -F '' | grep -v .git/"
  export FZF_ALT_C_COMMAND="bfs -type d -nohidden"
  bindkey -s '\C-l' 'vi $(fzf)^M'
  join-lines() {
    local item
    while read item; do
      echo -n "${(q)item} "
    done
  }
  fzf-gt-widget() LBUFFER+=$(gt | join-lines)
  zle -N fzf-gt-widget
  bindkey '^g^t' fzf-gt-widget
fi

# -- OS-Specific Config --------------------------------------------------------
if [[ $(uname) == 'Darwin' ]]; then
  # Load OSX config
  source $DOTFILES/zsh/zshrc.osx
elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
  # Load Linux config
  source $DOTFILES/zsh/zshrc.linux
fi

# -- asdf ---------------------------------------------------------------------
if [[ -d "$HOME/.asdf" ]]; then
  source $HOME/.asdf/asdf.sh
  source $HOME/.asdf/completions/asdf.bash
fi


# -- Kubectl
if exists "kubectl"; then
  source <(kubectl completion zsh)
fi

if [[ -f "$HOME/.kubecontexts" ]]; then
  source $HOME/.kubecontexts
fi

# -- jEnv ----------------------------------------------------------------------
eval "$(jenv init -)"

# -- Local Configuration (After Default) ---------------------------------------
if [[ -f "$DOTFILES/zsh/zshrc.local" ]]; then
  source $DOTFILES/zsh/zshrc.local
fi

compdef vman="man"
export GOPATH="$HOME/go"
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.dotfiles/scripts/bin:$HOME/.dotfiles/nvim/bundle/vim-superman/bin:$HOME/.rvm/bin:${GOPATH//://bin:}/bin"

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh

export NVM_DIR="$HOME/.config"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/shahein/.sdkman"
[[ -s "/home/shahein/.sdkman/bin/sdkman-init.sh" ]] && source "/home/shahein/.sdkman/bin/sdkman-init.sh"

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /home/shahein/.config/versions/node/v11.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /home/shahein/.config/versions/node/v11.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh
